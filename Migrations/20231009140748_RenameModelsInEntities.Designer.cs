// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmartFeedback.Scripts;

#nullable disable

namespace SmartFeedback.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20231009140748_RenameModelsInEntities")]
    partial class RenameModelsInEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SmartFeedback.Scripts.Entities.ConnectTextsObjects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Coincidence")
                        .HasColumnType("double precision");

                    b.Property<int>("FirstTextObjectId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("SecondTextObjectId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FirstTextObjectId");

                    b.HasIndex("SecondTextObjectId");

                    b.ToTable("ConnectTextsObjects");
                });

            modelBuilder.Entity("SmartFeedback.Scripts.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("SmartFeedback.Scripts.Entities.TextObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnalogCount")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("character varying(3000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<int>("RatingSum")
                        .HasColumnType("integer");

                    b.Property<string>("TechnicalText")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("character varying(3000)");

                    b.Property<int>("UserRatingCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("TextObjects");
                });

            modelBuilder.Entity("SmartFeedback.Scripts.Entities.UserRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLike")
                        .HasColumnType("boolean");

                    b.Property<int>("TextObjectId")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.HasKey("Id");

                    b.HasIndex("TextObjectId");

                    b.ToTable("UserRatings");
                });

            modelBuilder.Entity("SmartFeedback.Scripts.Entities.ConnectTextsObjects", b =>
                {
                    b.HasOne("SmartFeedback.Scripts.Entities.TextObject", "FirstTextObject")
                        .WithMany()
                        .HasForeignKey("FirstTextObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartFeedback.Scripts.Entities.TextObject", "SecondTextObject")
                        .WithMany()
                        .HasForeignKey("SecondTextObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FirstTextObject");

                    b.Navigation("SecondTextObject");
                });

            modelBuilder.Entity("SmartFeedback.Scripts.Entities.TextObject", b =>
                {
                    b.HasOne("SmartFeedback.Scripts.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("SmartFeedback.Scripts.Entities.UserRating", b =>
                {
                    b.HasOne("SmartFeedback.Scripts.Entities.TextObject", "TextObject")
                        .WithMany()
                        .HasForeignKey("TextObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TextObject");
                });
#pragma warning restore 612, 618
        }
    }
}
